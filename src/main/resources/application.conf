include "kamon"

akka {
  stdout-loglevel = "OFF"
  loglevel = "OFF"
  use-slf4j = on
  coordinated-shutdown.run-by-actor-system-terminate = on
  management {
    http {
      hostname = "0.0.0.0"
      route-providers-read-only = false
    }
    health-checks {
      readiness-checks {
        ready = "it.pagopa.interop.partyprocess.server.impl.HealthCheck"
      }
      liveness-checks {
        live = "it.pagopa.interop.partyprocess.server.impl.LiveCheck"
      }
    }
  }
}

party-process {
  port = 8088
  confirm-token-timeout = ${CONFIRM_TOKEN_TIMEOUT}
  signature-validation-enabled = true
  signature-validation-enabled = ${?SIGNATURE_VALIDATION_ENABLED}
  user-registry-api-key = ${USER_REGISTRY_API_KEY}
  destination-mails= ${?DESTINATION_MAILS}
  eu_list_of_trusted_lists_url = ${EU_LIST_OF_TRUSTED_LISTS_URL}
  eu_official_journal_url = ${EU_OFFICIAL_JOURNAL_URL}

  jwt {
    audience = ${?ACCEPTED_AUDIENCES}
  }

  storage {
    container = ${STORAGE_CONTAINER}
  }

  mail-template {
    path = ${MAIL_TEMPLATE_PATH}

    onboarding-mail-placeholders {
      userName = "requesterName"
      userSurname = "requesterSurname"
      userTaxCode = "requesterTaxCode"
      productId = "productId"
      productName = "productName"
      confirm-token {
        name = "confirmTokenURL"
        name = ${?MAIL_CONFIRM_PLACEHOLDER_NAME}
        placeholder = ${MAIL_ONBOARDING_CONFIRMATION_LINK}
      }
      reject-token {
        name = "rejectTokenURL"
        name = ${?MAIL_REJECT_PLACEHOLDER_NAME}
        placeholder = ${MAIL_ONBOARDING_REJECTION_LINK}
      }
      institution-info {
        institutionType = "overriding-institutionType"
        description = "overriding-description"
        digitalAddress = "overriding-digitalAddress"
        address = "overriding-address"
        zipCode = "overriding-zipCode"
        taxCode = "overriding-taxCode"
      }
      billing {
        pricingPlan = "billing-pricingPlan"
        vatNumber = "billing-vatNumber"
        recipientCode = "billing-recipientCode"
      }
    }
  }

  services {
    party-management = ${PARTY_MANAGEMENT_URL}
    party-proxy = ${PARTY_PROXY_URL}
    user-registry-management = ${USER_REGISTRY_MANAGEMENT_URL}
  }

}

interop-commons {
  storage {
    type = ${STORAGE_TYPE}
    endpoint = ${STORAGE_ENDPOINT}
    application {
      id = ${STORAGE_CREDENTIAL_ID}
      secret = ${STORAGE_CREDENTIAL_SECRET}
    }
  }

  mail {
    sender = ${SMTP_USR}
    smtp {
      server = ${SMTP_HOST}
      port = ${SMTP_PORT}
      user = ${SMTP_USR}
      password = ${SMTP_PSW}
      ssl = ${?SMTP_SSL}
    }
  }

  jwt {
    public-keys {
      urls = ${WELL_KNOWN_URLS}
    }
  }
}
