openapi: 3.0.3
info:
  title: Party Process Micro Service
  description: This service is the party process
  version: 0.0.1
  contact:
    name: API Support
    url: http://www.example.com/support
    email: support@example.com
  termsOfService: 'http://swagger.io/terms/'
  x-api-id: an x-api-id
  x-summary: an x-summary
servers:
  - url: https://gateway.interop.pdnd.dev/pdnd-interop-uservice-party-process/0.0.1
    description: This service is the party process
#security:
#  - bearerAuth: [ ]
tags:
  - name: process
    description: Implements party process
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: health
    description: Verify service status
    externalDocs:
      description: Find out more
      url: http://swagger.io
paths:
  /onboarding/{taxCode}:
    get:
      #      security:
      #        - bearerAuth: [ ]
      tags:
        - process
      summary: create an onboarding entry
      description: Return ok
      operationId: getOnBoardingInfo
      parameters:
        - name: taxCode
          in: path
          description: The tax code to get onboarding info
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnBoardingInfo'
        '400':
          description: Invalid ID supplied
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /onboarding/legals:
    post:
      #      security:
      #        - bearerAuth: [ ]
      tags:
        - process
      summary: create an onboarding entry
      description: Return ok
      operationId: createLegals
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OnBoardingRequest'
      responses:
        '201':
          description: successful operation
        '400':
          description: Invalid ID supplied
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /onboarding/operators:
    post:
      #      security:
      #        - bearerAuth: [ ]
      tags:
        - process
      summary: create an onboarding entry
      description: Return ok
      operationId: createOperators
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OnBoardingRequest'
      responses:
        '201':
          description: successful operation
        '400':
          description: Invalid ID supplied
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /onboarding/tokens:
    post:
      #      security:
      #        - bearerAuth: [ ]
      tags:
        - process
      summary: try to consume a token
      description: Return ok
      operationId: getToken
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewToken'
        '400':
          description: Invalid ID supplied
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /onboarding/tokens/{token}:
    post:
      #      security:
      #        - bearerAuth: [ ]
      tags:
        - process
      summary: try to consume a token
      description: Return ok
      operationId: consumeToken
      parameters:
        - name: token
          in: path
          description: The token to verify
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid ID supplied
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
    delete:
      #      security:
      #        - bearerAuth: [ ]
      tags:
        - process
      summary: invalidate a token
      description: Return ok
      operationId: invalidateToken
      parameters:
        - name: token
          in: path
          description: The token to invalidate
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid ID supplied
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'

  /status:
    get:
      #      security:
      #        - bearerAuth: [ ]
      tags:
        - health
      summary: Health status endpoint
      description: Return ok
      operationId: getStatus
      responses:
        '200':
          description: successful operation
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
components:
  schemas:
    OnBoardingRequest:
      properties:
#        manager:
#          $ref: '#/components/schemas/User'
#        delegate:
#          $ref: '#/components/schemas/User'
#        operators:
#          type: array
#          items:
#            $ref: '#/components/schemas/User'
#        manager:
#          $ref: '#/components/schemas/User'
#        delegate:
#          $ref: '#/components/schemas/User'
        users:
          type: array
          items:
            $ref: '#/components/schemas/User'
        institutionId:
          type: string
      additionalProperties: false
      required:
#        - manager
#        - operators
        - users
        - institutionId
    TokenRequest:
      properties:
        legals:
          type : array
          items:
            $ref: '#/components/schemas/User'
        institutionId:
          type: string
      additionalProperties: false
      required:
        - legals
        - institutionId
    NewToken:
      properties:
        token:
          maxLength: 4096
          pattern: '^.{0,1024}$'
          type: string
      additionalProperties: false
      required:
        - token
    User:
      properties:
        name:
          type: string
        surname:
          type: string
        taxCode:
          type: string
        role:
          $ref: '#/components/schemas/UserRole'
      additionalProperties: false
      required:
        - name
        - surname
        - taxCode
        - role
    UserRole:
      properties:
        value:
          type: string
          enum:
            - Manager
            - Delegate
            - Operator
      additionalProperties: false
      required:
        - value
    PersonInfo:
      properties:
        name:
          type: string
        surname:
          type: string
        taxCode:
          type: string
      additionalProperties: false
      required:
        - name
        - surname
        - taxCode
    InstitutionInfo:
      properties:
        institutionId:
          type: string
        description:
          type: string
        digitalAddress:
          type: string
        status:
          type: string
      additionalProperties: false
      required:
        - institutionId
        - description
        - digitalAddress
        - status
    OnBoardingInfo:
      properties:
        person:
          $ref: '#/components/schemas/PersonInfo'
        institutions:
          type: array
          items:
            $ref: '#/components/schemas/InstitutionInfo'
      additionalProperties: false
      required:
        - person
        - institutions
    Problem:
      properties:
        detail:
          description:
            A human readable explanation specific to this occurrence of the problem.
          example: Request took too long to complete.
          maxLength: 4096
          pattern: '^.{0,1024}$'
          type: string
        status:
          description:
            The HTTP status code generated by the origin server for this occurrence
            of the problem.
          example: 503
          exclusiveMaximum: true
          format: int32
          maximum: 600
          minimum: 100
          type: integer
        title:
          description:
            A short, summary of the problem type. Written in english and readable
          example: Service Unavailable
          maxLength: 64
          pattern: '^[ -~]{0,64}$'
          type: string
      additionalProperties: false
      required:
        - status
        - title
#   securitySchemes:
#     bearerAuth:
#       type: http
#       description: A bearer token in the format of a JWS and comformed to the specifications included in [RFC8725](https://tools.ietf.org/html/RFC8725).
#       scheme: bearer
#       bearerFormat: JWT