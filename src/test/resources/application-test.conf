akka {
  stdout-loglevel = "OFF"
  loglevel = "OFF"
  use-slf4j = on
}

party-process {
  port = 8088
  confirm-token-timeout = "3 seconds"
  signature-validation-enabled = false
  destination-mails= "mail@mail.com"
  eu_list_of_trusted_lists_url = "https://ec.europa.eu/tools/lotl/eu-lotl.xml"
  eu_official_journal_url = "https://eur-lex.europa.eu/legal-content/EN/TXT/?uri=uriserv:OJ.C_.2019.276.01.0001.01.ENG"

  jwt {
    audience = "local"
  }

  storage {
    container = "local"
  }

  logo {
    path = "src/test/resources/logo_pagopacorp.png"
  }

  user-registry-api-key = "user-registry-api-key"
  external-api-key = "external-api-key"
  external-api-user = "external-api-user"

  mail-template {
    onboarding_send_email_to_institution     = false
    onboarding_institution_alternative_email = "test@test.it"

    onboarding-mail-placeholders {
      path = "src/test/resources/mail-template.json"
      userName = "requesterName"
      userSurname = "requesterSurname"
      userTaxCode = "requesterTaxCode"
      productId = "productId"
      productName = "productName"
      confirm-token {
          name = "confirmTokenURL"
          placeholder = "confirm-value"
      }
      reject-token {
          name = "rejectTokenURL"
          placeholder = "reject-value"
      }
      institution-info {
        institutionType = "overriding-institutionType"
        description = "overriding-description"
        digitalAddress = "overriding-digitalAddress"
        address = "overriding-address"
        zipCode = "overriding-zipCode"
        taxCode = "overriding-taxCode"
      }
      billing {
        pricingPlan = "billing-pricingPlan"
        vatNumber = "billing-vatNumber"
        recipientCode = "billing-recipientCode"
      }
    }
    onboarding-complete-mail-placeholders {
      path = "src/test/resources/mail-template.json"
      selfcare {
          name = "selfcareURL"
          placeholder = "selfcare-value"
      }
      productName = "productName"
    }

    onboarding-notification-mail-placeholders {
      adminEmail = "foo@email.foo"
      path = "src/test/resources/mail-template-notification.json"
      confirm-token {
        name = "confirmTokenURL"
        placeholder = "selfcare-value"
      }
      productName = "productName"
      requesterName = "requesterName"
      requesterSurname = "requesterSurname"
      institutionName = "institutionName"
      institutionGeoTaxonomies = "institutionGeoTaxonomies"
    }

    onboarding-reject-mail-placeholders {
      path = "src/test/resources/mail-template-notification.json"
      productName = "productName"
      onboardingUrlPlaceholder = "onboardingUrl"
      onboardingUrlValue = "https://selfcare.pagopa.it/onboarding/"
    }

    onboarding-auto-complete {
      path = "src/test/resources/mail-template-notification.json"
    }
  }

  services {
    party-management = "localhost"
    party-proxy = "localhost"
    attribute-registry = "localhost"
    user-registry-management = "localhost"
    product-management = "localhost"
    geo-taxonomy = "localhost"
  }

  aruba {
    serviceUrl = "https://arss.demo.firma-automatica.it:443/ArubaSignService/ArubaSignService"
    typeOtpAuth = "typeOtpAuth"
    otpPwd = "otpPwd"
    user = "user"
    delegatedUser = "delegatedUser"
    delegatedPassword = "delegatedPassword"
    delegatedDomain = "delegatedDomain"
  }

  pagopaSignature {
    enabled = true
    signer = "PagoPaSigner"
    location = "Rome"

    apply {
      onboarding {
        enabled = true
        templateReason = "Onboarding institution ${institutionName} into product ${productName}"
      }
    }
  }
}


interop-commons {
  storage {
    type = "File"
    endpoint = "local"
    application {
      id = "local"
      secret = "local"
    }
  }

  mail {
    sender = "pippo@baudo.it"
    smtp {
        server =  "smtp.rai.com"
        port = 587
        user ="pippo@baudo.it"
        password ="Kat1a_I_love_U"
        ssl = true
    }
  }

  jwt {
    public-keys {
      url = "http://localhost/.well-known/jwks.json"
    }
  }
}